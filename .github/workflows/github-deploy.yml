name: Build and upload to PyPI

on:
  workflow_dispatch:
  pull_request:
  push:
    branches:
      - main
    tags:
      - 'v*.**'
  release:
    types:
      - published

jobs:
  # package:
  #   name: Build & inspect package
  #   runs-on: ubuntu-latest

  #   steps:
  #     - uses: actions/checkout@v4
  #       with:
  #         fetch-depth: 0
  #     - uses: hynek/build-and-inspect-python-package@v2

  build_wheels:
    name: Build wheels on ${{ matrix.os }}
    needs: [package]
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest]

    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Install uv and set the python version
        uses: astral-sh/setup-uv@v5

      - uses: hynek/build-and-inspect-python-package@v2

      - name: Build wheels
        uses: pypa/cibuildwheel@v2.20.0

      - uses: actions/upload-artifact@v4
        with:
          name: cibw-wheels-${{ matrix.os }}-${{ strategy.job-index }}
          path: ./wheelhouse/*.whl

  build_sdist:
    name: Build source distribution
    needs: [package]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Install uv and set the python version
        uses: astral-sh/setup-uv@v5

      - name: Build sdist
        run: uv build --sdist

      - uses: actions/upload-artifact@v4
        with:
          name: cibw-sdist
          path: dist/*.tar.gz
      
      - name: Check some variables
        run: |
          echo GITHUB_REF = $GITHUB_REF
          echo GITHUB_REF_NAME = $GITHUB_REF_NAME
          echo GITHUB_EVENT_NAME = $GITHUB_EVENT_NAME

  upload_test_pypi:
    needs: [build_wheels, build_sdist]
    runs-on: ubuntu-latest
    environment: pypi
    permissions:
      id-token: write
    if: github.event_name == 'push' && github.ref_type == 'tag' && startsWith(github.ref, 'refs/tags/v')
    steps:
      - uses: actions/download-artifact@v4
        with:
          # unpacks all CIBW artifacts into dist/
          pattern: cibw-*
          path: dist
          merge-multiple: true

      - uses: pypa/gh-action-pypi-publish@release/v1
        with:
          repository-url: https://test.pypi.org/legacy/

  upload_pypi:
    needs: [build_wheels, build_sdist]
    runs-on: ubuntu-latest
    environment: pypi
    permissions:
      id-token: write
    if: github.event_name == 'release' && github.event.action == 'published'
    steps:
      - uses: actions/download-artifact@v4
        with:
          # unpacks all CIBW artifacts into dist/
          pattern: cibw-*
          path: dist
          merge-multiple: true

      - uses: pypa/gh-action-pypi-publish@release/v1
