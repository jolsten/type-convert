name: Build and upload to PyPI

on:
  workflow_dispatch:
  pull_request:
  push:
    branches:
      - main
    tags:
      - 'v*.**'
  release:
    types:
      - published

jobs:
  build-sdist:
    name: Build sdist package
    runs-on: ubuntu-24.04
    steps:
      - name: Checkout repos
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Install uv and set the python version
        uses: astral-sh/setup-uv@v5

      - name: Build sdist
        run: uv build --sdist

      - uses: actions/upload-artifact@v4
        with:
          name: cibw-sdist
          path: dist/*.tar.gz

  build-wheel:
    runs-on: ${{matrix.os}}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-24.04, windows-latest]
        pyver: [cp39, cp310, cp311, cp312, cp313]

    steps:
      - name: Checkout repos
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Install uv and set the python version
        uses: astral-sh/setup-uv@v5

      - name: Build wheels
        uses: pypa/cibuildwheel@v2.22.0
        env:
          CIBW_BUILD: ${{matrix.pyver}}-*
          CIBW_BUILD_FRONTEND: build[uv]

      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: wheel-${{ matrix.pyver }}-${{ matrix.os }}
          path: ./wheelhouse/*.whl


  # build-cross-wheel:
  #   runs-on: ubuntu-24.04
  #   strategy:
  #     fail-fast: false
  #     matrix:
  #       pyver: [cp38, cp39, cp310, cp311, cp312, cp313]
  #       arch: [aarch64, ppc64le]

  #   steps:
  #     - name: Checkout repos
  #       uses: actions/checkout@v4
  #       with:
  #         fetch-depth: 0

  #     # - name: Install uv and set the python version
  #     #   uses: astral-sh/setup-uv@v5

  #     - name: Set up QEMU for multi-arch build
  #       uses: docker/setup-qemu-action@v3

  #     - name: Build wheels
  #       uses: pypa/cibuildwheel@v2.22.0
  #       env:
  #         CIBW_BUILD: ${{matrix.pyver}}-*
  #         CIBW_ARCHS: ${{matrix.arch}}

  #     # Tests mostly fail because of some confusion with the python interpreter

  #     - name: Upload artifacts
  #       uses: actions/upload-artifact@v4
  #       with:
  #         name: wheel-${{ matrix.pyver }}-${{ matrix.arch }}
  #         path: ./wheelhouse/*.whl


  # build-wheel-pypy:
  #   runs-on: ${{matrix.os}}
  #   strategy:
  #     fail-fast: false
  #     matrix:
  #       os: [ubuntu-24.04, windows-latest, macos-latest]

  #   steps:
  #     - name: Checkout repos
  #       uses: actions/checkout@v4
  #       with:
  #         fetch-depth: 0

  #     # - name: Install uv and set the python version
  #     #   uses: astral-sh/setup-uv@v5

  #     - name: Build wheels
  #       uses: pypa/cibuildwheel@v2.22.0
  #       env:
  #         CIBW_BUILD: pp*
  #         CIBW_SKIP: pp37-*

  #     - name: Upload artifacts
  #       uses: actions/upload-artifact@v4
  #       with:
  #         name: wheels-pp-${{ matrix.os }}
  #         path: ./wheelhouse/*.whl


  # build-cross-wheel-pypy:
  #   runs-on: ubuntu-24.04
  #   strategy:
  #     fail-fast: false

  #   steps:
  #     - name: Checkout repos
  #       uses: actions/checkout@v4
  #       with:
  #         fetch-depth: 0

  #     - name: Install uv and set the python version
  #       uses: astral-sh/setup-uv@v5

  #     - name: Set up QEMU for multi-arch build
  #       uses: docker/setup-qemu-action@v3

  #     - name: Build wheels
  #       uses: pypa/cibuildwheel@v2.22.0
  #       env:
  #         CIBW_BUILD: pp*
  #         CIBW_SKIP: pp37-*

  #     # Tests mostly fail because of some confusion with the python interpreter

  #     - name: Upload artifacts
  #       uses: actions/upload-artifact@v4
  #       with:
  #         name: wheels-pp-cross
  #         path: ./wheelhouse/*.whl


  merge:
    runs-on: ubuntu-latest
    needs:
      - build-sdist
      - build-wheel
      # - build-cross-wheel
      # - build-wheel-pypy
      # - build-cross-wheel-pypy
    steps:
      - name: Merge Artifacts
        uses: actions/upload-artifact/merge@v4
        with:
          name: cibw-artifacts
          delete-merged: true


  upload_test_pypi:
    needs: [merge]
    runs-on: ubuntu-latest
    environment: pypi
    permissions:
      id-token: write
    if: github.event_name == 'push' && github.ref_type == 'tag' && startsWith(github.ref, 'refs/tags/v')
    steps:
      - uses: actions/download-artifact@v4
        with:
          # unpacks all CIBW artifacts into dist/
          pattern: cibw-*
          path: dist
          merge-multiple: true

      - uses: pypa/gh-action-pypi-publish@release/v1
        with:
          repository-url: https://test.pypi.org/legacy/

  upload_pypi:
    needs: [merge]
    runs-on: ubuntu-latest
    environment: pypi
    permissions:
      id-token: write
    if: github.event_name == 'release' && github.event.action == 'published'
    steps:
      - uses: actions/download-artifact@v4
        with:
          # unpacks all CIBW artifacts into dist/
          pattern: cibw-*
          path: dist
          merge-multiple: true

      - uses: pypa/gh-action-pypi-publish@release/v1
